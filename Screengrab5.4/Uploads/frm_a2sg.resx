<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>