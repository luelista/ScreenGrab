<?xml version="1.0"?>
<doc>
<assembly>
<name>
ScreenGrab6
</name>
</assembly>
<members>
<member name="M:ScreenGrab6.sys_imageFromWeb.MD5HashForString(System.String)">
	<summary>
 Liefert den MD5-Hash-Wert eines Strings als Byte-Array zurück
 </summary>
	<param name="Text">Text zu dem ein Byte-Array ermittelt werden soll</param>
	<returns></returns>
	<remarks>Als Encoding wird der System.Default verwendet;</remarks>
</member><member name="M:ScreenGrab6.sys_imageFromWeb.ByteArrayToString(System.Byte[])">
	<summary>
 Liefert ein Byte-Array als String zurück (können Sie verwenden um einen 
 MD5-Hash-Wert vom Type "Byte-Array" in eine String um zu wandeln
 </summary>
	<param name="arrInput"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ScreenGrab6.JSON.JsonDecode(System.String)">
	<summary>
 Parses the string json into a value
 </summary>
	<param name="json">A JSON string.</param>
	<returns>An ArrayList, a Hashtable, a double, a string, null, true, or false</returns>
</member><member name="M:ScreenGrab6.JSON.JsonDecode(System.String,System.Boolean@)">
	<summary>
 Parses the string json into a value; and fills 'success' with the successfullness of the parse.
 </summary>
	<param name="json">A JSON string.</param>
	<param name="success">Successful parse?</param>
	<returns>An ArrayList, a Hashtable, a double, a string, null, true, or false</returns>
</member><member name="M:ScreenGrab6.JSON.JsonEncode(System.Object)">
	<summary>
 Converts a Hashtable / ArrayList object into a JSON string
 </summary>
	<param name="json">A Hashtable / ArrayList</param>
	<returns>A JSON encoded string, or null if object 'json' is not serializable</returns>
</member><member name="M:ScreenGrab6.JSON.IsNumeric(System.Object)">
	<summary>
 Determines if a given object is numeric in any way
 (can be integer, double, null, etc). 
 
 Thanks to mtighe for pointing out Double.TryParse to me.
 </summary>
</member><member name="T:ScreenGrab6.JSON">
	<summary>
 This class encodes and decodes JSON strings.
 Spec. details, see http://www.json.org/
 
 JSON uses Arrays and Objects. These correspond here to the datatypes ArrayList and Hashtable.
 All numbers are parsed to doubles.
 </summary>
</member><member name="T:ScreenGrab6.OAuth.OAuthBase.SignatureTypes">
	<summary>
 Provides a predefined set of algorithms that are supported officially by the protocol
 </summary>
</member><member name="T:ScreenGrab6.OAuth.OAuthBase.QueryParameter">
	<summary>
 Provides an internal structure to sort the query parameter
 </summary>
</member><member name="T:ScreenGrab6.OAuth.OAuthBase.QueryParameterComparer">
	<summary>
 Comparer class used to perform the sorting of the query parameters
 </summary>
</member><member name="M:ScreenGrab6.OAuth.OAuthBase.ComputeHash(System.Security.Cryptography.HashAlgorithm,System.String)">
	<summary>
 Helper function to compute a hash value
 </summary>
	<param name="hashAlgorithm">The hashing algoirhtm used. If that algorithm needs some initialization, like HMAC and its derivatives, they should be initialized prior to passing it to this function</param>
	<param name="data">The data to hash</param>
	<returns>a Base64 string of the hash value</returns>
</member><member name="M:ScreenGrab6.OAuth.OAuthBase.GetQueryParameters(System.String)">
	<summary>
 Internal function to cut out all non oauth query string parameters (all parameters not begining with "oauth_")
 </summary>
	<param name="parameters">The query string part of the Url</param>
	<returns>A list of QueryParameter each containing the parameter name and value</returns>
</member><member name="M:ScreenGrab6.OAuth.OAuthBase.UrlEncode(System.String)">
	<summary>
 This is a different Url Encode implementation since the default .NET one outputs the percent encoding in lower case.
 While this is not a problem with the percent encoding spec, it is used in upper case throughout OAuth
 </summary>
	<param name="value">The value to Url encode</param>
	<returns>Returns a Url encoded string</returns>
</member><member name="M:ScreenGrab6.OAuth.OAuthBase.NormalizeRequestParameters(System.Collections.Generic.SortedList{System.String,System.String})">
	<summary>
 Normalizes the request parameters according to the spec
 </summary>
	<param name="parameters">The list of parameters already sorted</param>
	<returns>a string representing the normalized parameters</returns>
</member><member name="M:ScreenGrab6.OAuth.OAuthBase.GenerateSignatureBase(System.Uri,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@)">
	<summary>
 Generate the signature base that is used to produce the signature
 </summary>
	<param name="url">The full url that needs to be signed including its non OAuth url parameters</param>
	<param name="consumerKey">The consumer key</param>
	<param name="token">The token, if available. If not available pass null or an empty string</param>
	<param name="tokenSecret">The token secret, if available. If not available pass null or an empty string</param>
	<param name="httpMethod">The http method used. Must be a valid HTTP method verb (POST,GET,PUT, etc)</param>
	<param name="signatureType">The signature type. To use the default values use <see cref="T:ScreenGrab6.OAuth.OAuthBase.SignatureTypes">OAuthBase.SignatureTypes</see>.</param>
	<returns>The signature base</returns>
</member><member name="M:ScreenGrab6.OAuth.OAuthBase.GenerateSignatureUsingHash(System.String,System.Security.Cryptography.HashAlgorithm)">
	<summary>
 Generate the signature value based on the given signature base and hash algorithm
 </summary>
	<param name="signatureBase">The signature based as produced by the GenerateSignatureBase method or by any other means</param>
	<param name="hash">The hash algorithm used to perform the hashing. If the hashing algorithm requires initialization or a key it should be set prior to calling this method</param>
	<returns>A base64 string of the hash value</returns>
</member><member name="M:ScreenGrab6.OAuth.OAuthBase.GenerateSignature(System.Uri,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@)">
	<summary>
 Generates a signature using the HMAC-SHA1 algorithm
 </summary>
	<param name="url">The full url that needs to be signed including its non OAuth url parameters</param>
	<param name="consumerKey">The consumer key</param>
	<param name="consumerSecret">The consumer seceret</param>
	<param name="token">The token, if available. If not available pass null or an empty string</param>
	<param name="tokenSecret">The token secret, if available. If not available pass null or an empty string</param>
	<param name="httpMethod">The http method used. Must be a valid HTTP method verb (POST,GET,PUT, etc)</param>
	<returns>A base64 string of the hash value</returns>
</member><member name="M:ScreenGrab6.OAuth.OAuthBase.GenerateSignature(System.Uri,System.String,System.String,System.String,System.String,System.String,System.String,System.String,ScreenGrab6.OAuth.OAuthBase.SignatureTypes,System.String@,System.String@)">
	<summary>
 Generates a signature using the specified signatureType 
 </summary>
	<param name="url">The full url that needs to be signed including its non OAuth url parameters</param>
	<param name="consumerKey">The consumer key</param>
	<param name="consumerSecret">The consumer seceret</param>
	<param name="token">The token, if available. If not available pass null or an empty string</param>
	<param name="tokenSecret">The token secret, if available. If not available pass null or an empty string</param>
	<param name="httpMethod">The http method used. Must be a valid HTTP method verb (POST,GET,PUT, etc)</param>
	<param name="signatureType">The type of signature to use</param>
	<returns>A base64 string of the hash value</returns>
</member><member name="M:ScreenGrab6.OAuth.OAuthBase.GenerateSignature(System.Uri,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,ScreenGrab6.OAuth.OAuthBase.SignatureTypes,System.String@,System.String@)">
	<summary>
 Generates a signature using the specified signatureType 
 </summary>
	<param name="url">The full url that needs to be signed including its non OAuth url parameters</param>
	<param name="consumerKey">The consumer key</param>
	<param name="consumerSecret">The consumer seceret</param>
	<param name="token">The token, if available. If not available pass null or an empty string</param>
	<param name="tokenSecret">The token secret, if available. If not available pass null or an empty string</param>
	<param name="httpMethod">The http method used. Must be a valid HTTP method verb (POST,GET,PUT, etc)</param>
	<param name="signatureType">The type of signature to use</param>
	<returns>A base64 string of the hash value</returns>
</member><member name="M:ScreenGrab6.OAuth.OAuthBase.GenerateTimeStamp">
	<summary>
 Generate the timestamp for the signature        
 </summary>
	<returns></returns>
</member><member name="M:ScreenGrab6.OAuth.OAuthBase.GenerateNonce">
	<summary>
 Generate a nonce
 </summary>
	<returns></returns>
</member><member name="F:ScreenGrab6.app_winVista.WTNCA_NODRAWCAPTION">
	<summary>
 Do Not Draw The Caption (Text)
 </summary>
</member><member name="F:ScreenGrab6.app_winVista.WTNCA_NODRAWICON">
	<summary>
 Do Not Draw the Icon
 </summary>
</member><member name="F:ScreenGrab6.app_winVista.WTNCA_NOSYSMENU">
	<summary>
 Do Not Show the System Menu
 </summary>
</member><member name="F:ScreenGrab6.app_winVista.WTNCA_NOMIRRORHELP">
	<summary>
 Do Not Mirror the Question mark Symbol
 </summary>
</member><member name="T:ScreenGrab6.app_winVista.WTA_OPTIONS">
	<summary>
 The Options of What Attributes to Add/Remove
 </summary>
</member><member name="T:ScreenGrab6.app_winVista.WindowThemeAttributeType">
	<summary>
 What Type of Attributes? (Only One is Currently Defined)
 </summary>
</member><member name="M:ScreenGrab6.app_winVista.SetWindowThemeAttribute(System.IntPtr,ScreenGrab6.app_winVista.WindowThemeAttributeType,ScreenGrab6.app_winVista.WTA_OPTIONS@,System.UInt32)">
	<summary>
 Set The Window's Theme Attributes
 </summary>
	<param name="hWnd">The Handle to the Window</param>
	<param name="wtype">What Type of Attributes</param>
	<param name="attributes">The Attributes to Add/Remove</param>
	<param name="size">The Size of the Attributes Struct</param>
	<returns>If The Call Was Successful or Not</returns>
</member><member name="F:ScreenGrab6.app_winVista.DeviceContextValues.Window">
	<summary>DCX_WINDOW: Returns a DC that corresponds to the window rectangle rather
 than the client rectangle.</summary>
</member><member name="F:ScreenGrab6.app_winVista.DeviceContextValues.Cache">
	<summary>DCX_CACHE: Returns a DC from the cache, rather than the OWNDC or CLASSDC
 window. Essentially overrides CS_OWNDC and CS_CLASSDC.</summary>
</member><member name="F:ScreenGrab6.app_winVista.DeviceContextValues.NoResetAttrs">
	<summary>DCX_NORESETATTRS: Does not reset the attributes of this DC to the
 default attributes when this DC is released.</summary>
</member><member name="F:ScreenGrab6.app_winVista.DeviceContextValues.ClipChildren">
	<summary>DCX_CLIPCHILDREN: Excludes the visible regions of all child windows
 below the window identified by hWnd.</summary>
</member><member name="F:ScreenGrab6.app_winVista.DeviceContextValues.ClipSiblings">
	<summary>DCX_CLIPSIBLINGS: Excludes the visible regions of all sibling windows
 above the window identified by hWnd.</summary>
</member><member name="F:ScreenGrab6.app_winVista.DeviceContextValues.ParentClip">
	<summary>DCX_PARENTCLIP: Uses the visible region of the parent window. The
 parent's WS_CLIPCHILDREN and CS_PARENTDC style bits are ignored. The origin is
 set to the upper-left corner of the window identified by hWnd.</summary>
</member><member name="F:ScreenGrab6.app_winVista.DeviceContextValues.ExcludeRgn">
	<summary>DCX_EXCLUDERGN: The clipping region identified by hrgnClip is excluded
 from the visible region of the returned DC.</summary>
</member><member name="F:ScreenGrab6.app_winVista.DeviceContextValues.IntersectRgn">
	<summary>DCX_INTERSECTRGN: The clipping region identified by hrgnClip is
 intersected with the visible region of the returned DC.</summary>
</member><member name="F:ScreenGrab6.app_winVista.DeviceContextValues.ExcludeUpdate">
	<summary>DCX_EXCLUDEUPDATE: Unknown...Undocumented</summary>
</member><member name="F:ScreenGrab6.app_winVista.DeviceContextValues.IntersectUpdate">
	<summary>DCX_INTERSECTUPDATE: Unknown...Undocumented</summary>
</member><member name="F:ScreenGrab6.app_winVista.DeviceContextValues.LockWindowUpdate">
	<summary>DCX_LOCKWINDOWUPDATE: Allows drawing even if there is a LockWindowUpdate
 call in effect that would otherwise exclude this window. Used for drawing during
 tracking.</summary>
</member><member name="F:ScreenGrab6.app_winVista.DeviceContextValues.Validate">
	<summary>DCX_VALIDATE When specified with DCX_INTERSECTUPDATE, causes the DC to
 be completely validated. Using this function with both DCX_INTERSECTUPDATE and
 DCX_VALIDATE is identical to using the BeginPaint function.</summary>
</member><member name="T:ScreenGrab6.app_winVista.DeviceContextValues">
	<summary>Values to pass to the GetDCEx method.</summary>
</member><member name="M:ScreenGrab6.app_winVista.TextBoxGlassDrawer.RedrawControlAsBitmap(System.IntPtr)">
	<summary>
 Redraws a given control as a bitmap ontop of itself.
 </summary>
	<param name="hwnd"></param>
	<remarks></remarks>
</member><member name="F:ScreenGrab6.sys_setWindowPos.SetWindowPosFlags.SynchronousWindowPosition">
	<summary>If the calling thread and the thread that owns the window are attached to different input queues, 
 the system posts the request to the thread that owns the window. This prevents the calling thread from 
 blocking its execution while other threads process the request.</summary>
	<remarks>SWP_ASYNCWINDOWPOS</remarks>
</member><member name="F:ScreenGrab6.sys_setWindowPos.SetWindowPosFlags.DeferErase">
	<summary>Prevents generation of the WM_SYNCPAINT message.</summary>
	<remarks>SWP_DEFERERASE</remarks>
</member><member name="F:ScreenGrab6.sys_setWindowPos.SetWindowPosFlags.DrawFrame">
	<summary>Draws a frame (defined in the window's class description) around the window.</summary>
	<remarks>SWP_DRAWFRAME</remarks>
</member><member name="F:ScreenGrab6.sys_setWindowPos.SetWindowPosFlags.FrameChanged">
	<summary>Applies new frame styles set using the SetWindowLong function. Sends a WM_NCCALCSIZE message to 
 the window, even if the window's size is not being changed. If this flag is not specified, WM_NCCALCSIZE 
 is sent only when the window's size is being changed.</summary>
	<remarks>SWP_FRAMECHANGED</remarks>
</member><member name="F:ScreenGrab6.sys_setWindowPos.SetWindowPosFlags.HideWindow">
	<summary>Hides the window.</summary>
	<remarks>SWP_HIDEWINDOW</remarks>
</member><member name="F:ScreenGrab6.sys_setWindowPos.SetWindowPosFlags.DoNotActivate">
	<summary>Does not activate the window. If this flag is not set, the window is activated and moved to the 
 top of either the topmost or non-topmost group (depending on the setting of the hWndInsertAfter 
 parameter).</summary>
	<remarks>SWP_NOACTIVATE</remarks>
</member><member name="F:ScreenGrab6.sys_setWindowPos.SetWindowPosFlags.DoNotCopyBits">
	<summary>Discards the entire contents of the client area. If this flag is not specified, the valid 
 contents of the client area are saved and copied back into the client area after the window is sized or 
 repositioned.</summary>
	<remarks>SWP_NOCOPYBITS</remarks>
</member><member name="F:ScreenGrab6.sys_setWindowPos.SetWindowPosFlags.IgnoreMove">
	<summary>Retains the current position (ignores X and Y parameters).</summary>
	<remarks>SWP_NOMOVE</remarks>
</member><member name="F:ScreenGrab6.sys_setWindowPos.SetWindowPosFlags.DoNotChangeOwnerZOrder">
	<summary>Does not change the owner window's position in the Z order.</summary>
	<remarks>SWP_NOOWNERZORDER</remarks>
</member><member name="F:ScreenGrab6.sys_setWindowPos.SetWindowPosFlags.DoNotRedraw">
	<summary>Does not redraw changes. If this flag is set, no repainting of any kind occurs. This applies to 
 the client area, the nonclient area (including the title bar and scroll bars), and any part of the parent 
 window uncovered as a result of the window being moved. When this flag is set, the application must 
 explicitly invalidate or redraw any parts of the window and parent window that need redrawing.</summary>
	<remarks>SWP_NOREDRAW</remarks>
</member><member name="F:ScreenGrab6.sys_setWindowPos.SetWindowPosFlags.DoNotReposition">
	<summary>Same as the SWP_NOOWNERZORDER flag.</summary>
	<remarks>SWP_NOREPOSITION</remarks>
</member><member name="F:ScreenGrab6.sys_setWindowPos.SetWindowPosFlags.DoNotSendChangingEvent">
	<summary>Prevents the window from receiving the WM_WINDOWPOSCHANGING message.</summary>
	<remarks>SWP_NOSENDCHANGING</remarks>
</member><member name="F:ScreenGrab6.sys_setWindowPos.SetWindowPosFlags.IgnoreResize">
	<summary>Retains the current size (ignores the cx and cy parameters).</summary>
	<remarks>SWP_NOSIZE</remarks>
</member><member name="F:ScreenGrab6.sys_setWindowPos.SetWindowPosFlags.IgnoreZOrder">
	<summary>Retains the current Z order (ignores the hWndInsertAfter parameter).</summary>
	<remarks>SWP_NOZORDER</remarks>
</member><member name="F:ScreenGrab6.sys_setWindowPos.SetWindowPosFlags.ShowWindow">
	<summary>Displays the window.</summary>
	<remarks>SWP_SHOWWINDOW</remarks>
</member><member name="P:ScreenGrab6.ScreenArea.LeftMostBound">
	<summary>
 Gets the least "x" coordinate of all screens on the system
 </summary>
	<returns>The smallest visible "x" screen coordinate</returns>
</member><member name="P:ScreenGrab6.ScreenArea.RightMostBound">
	<summary>
 Gets the greatest "x" coordinate of all screens on the system
 </summary>
	<returns>The largest visible "x" screen coordinate</returns>
</member><member name="P:ScreenGrab6.ScreenArea.TopMostBound">
	<summary>
 Gets the least "y" coordinate of all screens on the system
 </summary>
	<returns>The smallest visible "y" screen coordinate</returns>
</member><member name="P:ScreenGrab6.ScreenArea.BottomMostBound">
	<summary>
 Gets the greatest "y" coordinate of all screens on the system
 </summary>
	<returns>The largest visible "y" screen coordinate</returns>
</member><member name="P:ScreenGrab6.ScreenArea.MaximumWidth">
	<summary>
 Gets the width of the screen with the highest resolution.
 </summary>
	<returns>The width of the screen with the highest resolution.</returns>
</member><member name="P:ScreenGrab6.ScreenArea.MinimumWidth">
	<summary>
 Gets the width of the screen with the lowest resolution.
 </summary>
	<returns>The width of the screen with the lowest resolution.</returns>
</member><member name="P:ScreenGrab6.ScreenArea.MaximumHeight">
	<summary>
 Gets the height of the screen with the highest resolution.
 </summary>
	<returns>The height of the screen with the highest resolution.</returns>
</member><member name="P:ScreenGrab6.ScreenArea.MinimumHeight">
	<summary>
 Gets the height of the screen with the lowest resolution.
 </summary>
	<returns>The height of the screen with the lowest resolution.</returns>
</member><member name="P:ScreenGrab6.ScreenArea.TotalWidth">
	<summary>
 Gets the total width of all the screens relative to their arrangement.
 </summary>
	<returns>The total width of all the screens relative to their arrangement.</returns>
</member><member name="P:ScreenGrab6.ScreenArea.TotalHeight">
	<summary>
 Gets the total height of all the screens relative to their arrangement.
 </summary>
	<returns>The total height of all the screens relative to their arrangement.</returns>
</member><member name="T:ScreenGrab6.ScreenArea">
	<summary>Returns screen area statistics and capture functionality for all connected screens.</summary>
</member><member name="P:ScreenGrab6.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:ScreenGrab6.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:ScreenGrab6.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:ScreenGrab6.ColorExtensions.GetNearestName(System.Drawing.Color)">
	<summary>
 Gets the <see cref="P:System.Drawing.Color.Name">System.Drawing.Color.Name</see> of the closest matching color.
 </summary>
	<example>
		<code>
    Private Sub Example()
        Dim oColor As Color = Color.FromName(GetNearestName(Color.FromArgb(255, 255, 255, 0)))
        Debug.Assert(oColor.Name = "Yellow")
    End Sub
 </code>
	</example>
</member><member name="M:ScreenGrab6.ColorExtensions.GetNearestKnownColor(System.Drawing.Color)">
	<summary>
 Gets the <see cref="T:System.Drawing.KnownColor">System.Drawing.KnownColor</see> of the closest matching known color.
 </summary>
	<example>
		<code>
    Private Sub Example()
        Dim oColor As Color =  Color.FromKnownColor(GetNearestKnownColor(Color.FromArgb(255, 255, 255, 0)))
        Debug.Assert(oColor.Name = "Yellow")
    End Sub
 </code>
	</example>
</member><member name="M:ScreenGrab6.ColorExtensions.ColorName.ToRGBString">
	<summary>
 Returns RGB=(212,208,200)
 </summary>
</member>
</members>
</doc>