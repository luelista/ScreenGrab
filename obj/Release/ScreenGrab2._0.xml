<?xml version="1.0"?>
<doc>
<assembly>
<name>
ScreenGrab5
</name>
</assembly>
<members>
<member name="P:ScreenGrab5.ScreenArea.LeftMostBound">
	<summary>
 Gets the least "x" coordinate of all screens on the system
 </summary>
	<returns>The smallest visible "x" screen coordinate</returns>
</member><member name="P:ScreenGrab5.ScreenArea.RightMostBound">
	<summary>
 Gets the greatest "x" coordinate of all screens on the system
 </summary>
	<returns>The largest visible "x" screen coordinate</returns>
</member><member name="P:ScreenGrab5.ScreenArea.TopMostBound">
	<summary>
 Gets the least "y" coordinate of all screens on the system
 </summary>
	<returns>The smallest visible "y" screen coordinate</returns>
</member><member name="P:ScreenGrab5.ScreenArea.BottomMostBound">
	<summary>
 Gets the greatest "y" coordinate of all screens on the system
 </summary>
	<returns>The largest visible "y" screen coordinate</returns>
</member><member name="P:ScreenGrab5.ScreenArea.MaximumWidth">
	<summary>
 Gets the width of the screen with the highest resolution.
 </summary>
	<returns>The width of the screen with the highest resolution.</returns>
</member><member name="P:ScreenGrab5.ScreenArea.MinimumWidth">
	<summary>
 Gets the width of the screen with the lowest resolution.
 </summary>
	<returns>The width of the screen with the lowest resolution.</returns>
</member><member name="P:ScreenGrab5.ScreenArea.MaximumHeight">
	<summary>
 Gets the height of the screen with the highest resolution.
 </summary>
	<returns>The height of the screen with the highest resolution.</returns>
</member><member name="P:ScreenGrab5.ScreenArea.MinimumHeight">
	<summary>
 Gets the height of the screen with the lowest resolution.
 </summary>
	<returns>The height of the screen with the lowest resolution.</returns>
</member><member name="P:ScreenGrab5.ScreenArea.TotalWidth">
	<summary>
 Gets the total width of all the screens relative to their arrangement.
 </summary>
	<returns>The total width of all the screens relative to their arrangement.</returns>
</member><member name="P:ScreenGrab5.ScreenArea.TotalHeight">
	<summary>
 Gets the total height of all the screens relative to their arrangement.
 </summary>
	<returns>The total height of all the screens relative to their arrangement.</returns>
</member><member name="T:ScreenGrab5.ScreenArea">
	<summary>Returns screen area statistics and capture functionality for all connected screens.</summary>
</member><member name="M:ScreenGrab5.sys_imageFromWeb.MD5HashForString(System.String)">
	<summary>
 Liefert den MD5-Hash-Wert eines Strings als Byte-Array zurück
 </summary>
	<param name="Text">Text zu dem ein Byte-Array ermittelt werden soll</param>
	<returns></returns>
	<remarks>Als Encoding wird der System.Default verwendet;</remarks>
</member><member name="M:ScreenGrab5.sys_imageFromWeb.ByteArrayToString(System.Byte[])">
	<summary>
 Liefert ein Byte-Array als String zurück (können Sie verwenden um einen 
 MD5-Hash-Wert vom Type "Byte-Array" in eine String um zu wandeln
 </summary>
	<param name="arrInput"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:ScreenGrab5.app_winVista.WTNCA_NODRAWCAPTION">
	<summary>
 Do Not Draw The Caption (Text)
 </summary>
</member><member name="F:ScreenGrab5.app_winVista.WTNCA_NODRAWICON">
	<summary>
 Do Not Draw the Icon
 </summary>
</member><member name="F:ScreenGrab5.app_winVista.WTNCA_NOSYSMENU">
	<summary>
 Do Not Show the System Menu
 </summary>
</member><member name="F:ScreenGrab5.app_winVista.WTNCA_NOMIRRORHELP">
	<summary>
 Do Not Mirror the Question mark Symbol
 </summary>
</member><member name="T:ScreenGrab5.app_winVista.WTA_OPTIONS">
	<summary>
 The Options of What Attributes to Add/Remove
 </summary>
</member><member name="T:ScreenGrab5.app_winVista.WindowThemeAttributeType">
	<summary>
 What Type of Attributes? (Only One is Currently Defined)
 </summary>
</member><member name="M:ScreenGrab5.app_winVista.SetWindowThemeAttribute(System.IntPtr,ScreenGrab5.app_winVista.WindowThemeAttributeType,ScreenGrab5.app_winVista.WTA_OPTIONS@,System.UInt32)">
	<summary>
 Set The Window's Theme Attributes
 </summary>
	<param name="hWnd">The Handle to the Window</param>
	<param name="wtype">What Type of Attributes</param>
	<param name="attributes">The Attributes to Add/Remove</param>
	<param name="size">The Size of the Attributes Struct</param>
	<returns>If The Call Was Successful or Not</returns>
</member><member name="F:ScreenGrab5.app_winVista.DeviceContextValues.Window">
	<summary>DCX_WINDOW: Returns a DC that corresponds to the window rectangle rather
 than the client rectangle.</summary>
</member><member name="F:ScreenGrab5.app_winVista.DeviceContextValues.Cache">
	<summary>DCX_CACHE: Returns a DC from the cache, rather than the OWNDC or CLASSDC
 window. Essentially overrides CS_OWNDC and CS_CLASSDC.</summary>
</member><member name="F:ScreenGrab5.app_winVista.DeviceContextValues.NoResetAttrs">
	<summary>DCX_NORESETATTRS: Does not reset the attributes of this DC to the
 default attributes when this DC is released.</summary>
</member><member name="F:ScreenGrab5.app_winVista.DeviceContextValues.ClipChildren">
	<summary>DCX_CLIPCHILDREN: Excludes the visible regions of all child windows
 below the window identified by hWnd.</summary>
</member><member name="F:ScreenGrab5.app_winVista.DeviceContextValues.ClipSiblings">
	<summary>DCX_CLIPSIBLINGS: Excludes the visible regions of all sibling windows
 above the window identified by hWnd.</summary>
</member><member name="F:ScreenGrab5.app_winVista.DeviceContextValues.ParentClip">
	<summary>DCX_PARENTCLIP: Uses the visible region of the parent window. The
 parent's WS_CLIPCHILDREN and CS_PARENTDC style bits are ignored. The origin is
 set to the upper-left corner of the window identified by hWnd.</summary>
</member><member name="F:ScreenGrab5.app_winVista.DeviceContextValues.ExcludeRgn">
	<summary>DCX_EXCLUDERGN: The clipping region identified by hrgnClip is excluded
 from the visible region of the returned DC.</summary>
</member><member name="F:ScreenGrab5.app_winVista.DeviceContextValues.IntersectRgn">
	<summary>DCX_INTERSECTRGN: The clipping region identified by hrgnClip is
 intersected with the visible region of the returned DC.</summary>
</member><member name="F:ScreenGrab5.app_winVista.DeviceContextValues.ExcludeUpdate">
	<summary>DCX_EXCLUDEUPDATE: Unknown...Undocumented</summary>
</member><member name="F:ScreenGrab5.app_winVista.DeviceContextValues.IntersectUpdate">
	<summary>DCX_INTERSECTUPDATE: Unknown...Undocumented</summary>
</member><member name="F:ScreenGrab5.app_winVista.DeviceContextValues.LockWindowUpdate">
	<summary>DCX_LOCKWINDOWUPDATE: Allows drawing even if there is a LockWindowUpdate
 call in effect that would otherwise exclude this window. Used for drawing during
 tracking.</summary>
</member><member name="F:ScreenGrab5.app_winVista.DeviceContextValues.Validate">
	<summary>DCX_VALIDATE When specified with DCX_INTERSECTUPDATE, causes the DC to
 be completely validated. Using this function with both DCX_INTERSECTUPDATE and
 DCX_VALIDATE is identical to using the BeginPaint function.</summary>
</member><member name="T:ScreenGrab5.app_winVista.DeviceContextValues">
	<summary>Values to pass to the GetDCEx method.</summary>
</member><member name="M:ScreenGrab5.app_winVista.TextBoxGlassDrawer.RedrawControlAsBitmap(System.IntPtr)">
	<summary>
 Redraws a given control as a bitmap ontop of itself.
 </summary>
	<param name="hwnd"></param>
	<remarks></remarks>
</member><member name="P:ScreenGrab5.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:ScreenGrab5.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:ScreenGrab5.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPclient.#ctor">
	<summary>
 Blank constructor
 </summary>
	<remarks>Hostname, username and password must be set manually</remarks>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPclient.#ctor(System.String)">
	<summary>
 Constructor just taking the hostname
 </summary>
	<param name="Hostname">in either ftp://ftp.host.com or ftp.host.com form</param>
	<remarks></remarks>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPclient.#ctor(System.String,System.String,System.String)">
	<summary>
 Constructor taking hostname, username and password
 </summary>
	<param name="Hostname">in either ftp://ftp.host.com or ftp.host.com form</param>
	<param name="Username">Leave blank to use 'anonymous' but set password to your email</param>
	<param name="Password"></param>
	<remarks></remarks>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPclient.ListDirectory(System.String)">
	<summary>
 Return a simple directory listing
 </summary>
	<param name="directory">Directory to list, e.g. /pub</param>
	<returns>A list of filenames and directories as a List(of String)</returns>
	<remarks>For a detailed directory listing, use ListDirectoryDetail</remarks>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPclient.ListDirectoryDetail(System.String)">
	<summary>
 Return a detailed directory listing
 </summary>
	<param name="directory">Directory to list, e.g. /pub/etc</param>
	<returns>An FTPDirectory object</returns>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPclient.Upload(System.String,System.String)">
	<summary>
 Copy a local file to the FTP server
 </summary>
	<param name="localFilename">Full path of the local file</param>
	<param name="targetFilename">Target filename, if required</param>
	<returns></returns>
	<remarks>If the target filename is blank, the source filename is used
 (assumes current directory). Otherwise use a filename to specify a name
 or a full path and filename if required.</remarks>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPclient.Upload(System.IO.FileInfo,System.String)">
	<summary>
 Upload a local file to the FTP server
 </summary>
	<param name="fi">Source file</param>
	<param name="targetFilename">Target filename (optional)</param>
	<returns></returns>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPclient.Download(System.String,System.String,System.Boolean)">
	<summary>
 Copy a file from FTP server to local
 </summary>
	<param name="sourceFilename">Target filename, if required</param>
	<param name="localFilename">Full path of the local file</param>
	<returns></returns>
	<remarks>Target can be blank (use same filename), or just a filename
 (assumes current directory) or a full path and filename</remarks>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPclient.FtpDelete(System.String)">
	<summary>
 Delete remote file
 </summary>
	<param name="filename">filename or full path</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPclient.FtpFileExists(System.String)">
	<summary>
 Determine if file exists on remote FTP site
 </summary>
	<param name="filename">Filename (for current dir) or full path</param>
	<returns></returns>
	<remarks>Note this only works for files</remarks>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPclient.GetFileSize(System.String)">
	<summary>
 Determine size of remote file
 </summary>
	<param name="filename"></param>
	<returns></returns>
	<remarks>Throws an exception if file does not exist</remarks>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPclient.GetCredentials">
	<summary>
 Get the credentials from username/password
 </summary>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPclient.GetFullPath(System.String)">
	<summary>
 returns a full path using CurrentDirectory for a relative file reference
 </summary>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPclient.AdjustDir(System.String)">
	<summary>
 Amend an FTP path so that it always starts with /
 </summary>
	<param name="path">Path to adjust</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPclient.GetStringResponse(System.Net.FtpWebRequest)">
	<summary>
 Obtains a response stream as a string
 </summary>
	<param name="ftp">current FTP request</param>
	<returns>String containing response</returns>
	<remarks>FTP servers typically return strings with CR and
 not CRLF. Use respons.Replace(vbCR, vbCRLF) to convert
 to an MSDOS string</remarks>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPclient.GetSize(System.Net.FtpWebRequest)">
	<summary>
 Gets the size of an FTP request
 </summary>
	<param name="ftp"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ScreenGrab5.Utilities.FTP.FTPclient.Hostname">
	<summary>
 Hostname
 </summary>
	<value></value>
	<remarks>Hostname can be in either the full URL format
 ftp://ftp.myhost.com or just ftp.myhost.com
 </remarks>
</member><member name="P:ScreenGrab5.Utilities.FTP.FTPclient.Username">
	<summary>
 Username property
 </summary>
	<value></value>
	<remarks>Can be left blank, in which case 'anonymous' is returned</remarks>
</member><member name="F:ScreenGrab5.Utilities.FTP.FTPclient._currentDirectory">
	<summary>
 The CurrentDirectory value
 </summary>
	<remarks>Defaults to the root '/'</remarks>
</member><member name="T:ScreenGrab5.Utilities.FTP.FTPclient">
	<summary>
 A wrapper class for .NET 2.0 FTP
 </summary>
	<remarks>
 This class does not hold open an FTP connection but 
 instead is stateless: for each FTP request it 
 connects, performs the request and disconnects.
 </remarks>
</member><member name="T:ScreenGrab5.Utilities.FTP.FTPfileInfo.DirectoryEntryTypes">
	<summary>
 Identifies entry as either File or Directory
 </summary>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPfileInfo.#ctor(System.String,System.String)">
	<summary>
 Constructor taking a directory listing line and path
 </summary>
	<param name="line">The line returned from the detailed directory list</param>
	<param name="path">Path of the directory</param>
	<remarks></remarks>
</member><member name="F:ScreenGrab5.Utilities.FTP.FTPfileInfo._ParseFormats">
	<summary>
 List of REGEX formats for different FTP server listing formats
 </summary>
	<remarks>
 The first three are various UNIX/LINUX formats, fourth is for MS FTP
 in detailed mode and the last for MS FTP in 'DOS' mode.
 I wish VB.NET had support for Const arrays like C# but there you go
 </remarks>
</member><member name="T:ScreenGrab5.Utilities.FTP.FTPfileInfo">
	<summary>
 Represents a file or directory entry from an FTP listing
 </summary>
	<remarks>
 This class is used to parse the results from a detailed
 directory list from FTP. It supports most formats of
 </remarks>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPdirectory.#ctor(System.String,System.String)">
	<summary>
 Constructor: create list from a (detailed) directory string
 </summary>
	<param name="dir">directory listing string</param>
	<param name="path"></param>
	<remarks></remarks>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPdirectory.GetFiles(System.String)">
	<summary>
 Filter out only files from directory listing
 </summary>
	<param name="ext">optional file extension filter</param>
	<returns>FTPdirectory listing</returns>
</member><member name="M:ScreenGrab5.Utilities.FTP.FTPdirectory.GetDirectories">
	<summary>
 Returns a list of only subdirectories
 </summary>
	<returns>FTPDirectory list</returns>
	<remarks></remarks>
</member><member name="T:ScreenGrab5.Utilities.FTP.FTPdirectory">
	<summary>
 Stores a list of files and directories from an FTP result
 </summary>
	<remarks></remarks>
</member>
</members>
</doc>